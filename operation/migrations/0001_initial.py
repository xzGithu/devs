# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-11-16 09:46
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExtendUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('img', models.CharField(default='user.jpg', max_length=10)),
                ('phone', models.CharField(default='None', max_length=11)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100)),
                ('info', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.IntegerField(choices=[(0, '\u8d44\u4ea7\u7ba1\u7406'), (1, '\u811a\u672c\u4fee\u6539'), (2, '\u5267\u672c\u4fee\u6539'), (3, '\u4eba\u5458\u7ba1\u7406'), (4, '\u5e94\u7528\u7ba1\u7406')], default=0)),
                ('info', models.TextField(default='')),
                ('status', models.IntegerField(choices=[(0, '\u6b63\u5728\u8fd0\u884c'), (1, '\u8fd0\u884c\u6210\u529f'), (2, '\u8fd0\u884c\u5931\u8d25')], default=0)),
                ('starttime', models.DateTimeField(auto_now_add=True)),
                ('endtime', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('systemtype', models.IntegerField(choices=[(0, '\u672a\u6dfb\u52a0'), (1, 'Windows Server 2006'), (2, 'Windows Server 2008'), (3, 'Centos 6.5'), (4, 'Centos 7.1')], default=0)),
                ('manage_ip', models.CharField(default='', max_length=15)),
                ('service_ip', models.CharField(default='', max_length=15)),
                ('outer_ip', models.CharField(default='', max_length=15)),
                ('server_position', models.CharField(default='', max_length=50)),
                ('hostname', models.CharField(default='localhost.localdomain', max_length=50)),
                ('normal_user', models.CharField(default='', max_length=15)),
                ('sshpasswd', models.CharField(default='', max_length=100)),
                ('sshport', models.CharField(default='', max_length=5)),
                ('coreness', models.CharField(default='', max_length=5)),
                ('memory', models.CharField(default='', max_length=7)),
                ('root_disk', models.CharField(default='', max_length=7)),
                ('info', models.CharField(default='', max_length=200)),
                ('status', models.IntegerField(choices=[(0, '\u9519\u8bef'), (1, '\u6b63\u5e38'), (2, '\u4e0d\u53ef\u8fbe')], default=1)),
                ('groups', models.ManyToManyField(blank=True, related_name='hosts', to='operation.Group', verbose_name='Group')),
            ],
        ),
        migrations.CreateModel(
            name='PlayBook',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='noName', max_length=100)),
                ('info', models.CharField(default='noUse', max_length=100)),
                ('sort', models.IntegerField(default=0)),
                ('sudo', models.IntegerField(choices=[(0, '\u4e0d\u9700\u8981'), (1, '\u9700\u8981')], default=1)),
                ('status', models.IntegerField(choices=[(0, '\u672a\u5b8c\u6210'), (1, '\u5df2\u5b8c\u6210')], default=0)),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='puser', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, related_name='playbooks', to='operation.Group', verbose_name='Playbook')),
            ],
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='noName', max_length=100)),
                ('info', models.CharField(default='noUse', max_length=100)),
                ('script', models.TextField(default='')),
                ('status', models.IntegerField(choices=[(0, '\u672a\u5b8c\u6210'), (1, '\u5df2\u5b8c\u6210')], default=0)),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='suser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScriptArgs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('args_name', models.CharField(default='', max_length=100)),
                ('args_value', models.CharField(default='', max_length=100)),
                ('script', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='scriptargs', to='operation.Script')),
            ],
        ),
        migrations.CreateModel(
            name='Softlib',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('soft_type', models.IntegerField(choices=[(0, 'no'), (1, 'Tomcat\u5e94\u7528'), (2, '\u6570\u636e\u5e93'), (3, 'redis\u7f13\u5b58'), (4, 'nginx\u5e94\u7528'), (5, 'rabbitmq\u961f\u5217')], default=0)),
                ('soft_version', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('disk_size', models.CharField(default='', max_length=100)),
                ('disk_path', models.CharField(default='', max_length=100)),
                ('info', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('module', models.CharField(default='hostname', max_length=20)),
                ('args', models.CharField(default='', max_length=100)),
                ('sort', models.IntegerField(default=0)),
                ('playbook', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='operation.PlayBook')),
            ],
        ),
        migrations.AddField(
            model_name='host',
            name='storages',
            field=models.ManyToManyField(blank=True, related_name='hosts', to='operation.Storage', verbose_name='Host'),
        ),
        migrations.AddField(
            model_name='history',
            name='hosts',
            field=models.ManyToManyField(blank=True, related_name='hosts', to='operation.Host', verbose_name='Host'),
        ),
        migrations.AddField(
            model_name='history',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='startuser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extenduser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='extenduser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
